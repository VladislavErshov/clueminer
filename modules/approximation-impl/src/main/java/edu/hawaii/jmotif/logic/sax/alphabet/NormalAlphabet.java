package edu.hawaii.jmotif.logic.sax.alphabet;

import edu.hawaii.jmotif.datatype.TSException;

/**
 * Implements alphabet component for SAX.
 *
 * @author Pavel Senin
 *
 */
public final class NormalAlphabet extends Alphabet {

  /** Maximal possible alphabet size. */
  private static final int MAX_SIZE = 20;

  // cut intervals
  //
  private static final double[] case2 = { 0 };
  private static final double[] case3 = { -0.43, 0.43 };
  private static final double[] case4 = { -0.67, 0, 0.67 };
  private static final double[] case5 = { -0.84, -0.25, 0.25, 0.84 };
  private static final double[] case6 = { -0.97, -0.43, 0.00, 0.43, 0.97 };
  private static final double[] case7 = { -1.07, -0.57, -0.18, 0.18, 0.57, 1.07 };
  private static final double[] case8 = { -1.15, -0.67, -0.32, 0.00, 0.32, 0.67, 1.15 };
  private static final double[] case9 = { -1.22, -0.76, -0.43, -0.14, 0.14, 0.43, 0.76, 1.22 };
  private static final double[] case10 = { -1.28, -0.84, -0.52, -0.25, 0.00, 0.25, 0.52,
      0.84, 1.28 };
  private static final double[] case11 = { -1.34, -0.91, -0.6, -0.35, -0.11, 0.11, 0.35, 0.6, 0.91,
      1.34 };
  private static final double[] case12 = { -1.38, -0.97, -0.67, -0.43, -0.21, 0.00, 0.21, 0.43,
      0.67, 0.97, 1.38 };
  private static final double[] case13 = { -1.43, -1.02, -0.74, -0.5, -0.29, -0.1, 0.1, 0.29, 0.5,
      0.74, 1.02, 1.43 };
  private static final double[] case14 = { -1.47, -1.07, -0.79, -0.57, -0.37, -0.18, 0.00, 0.18,
      0.37, 0.57, 0.79, 1.07, 1.47 };
  private static final double[] case15 = { -1.5, -1.11, -0.84, -0.62, -0.43, -0.25, -0.08, 0.08,
      0.25, 0.43, 0.62, 0.84, 1.11, 1.5 };
  private static final double[] case16 = { -1.53, -1.15, -0.89, -0.67, -0.49, -0.32, -0.16, 0.00,
      0.16, 0.32, 0.49, 0.67, 0.89, 1.15, 1.53 };
  private static final double[] case17 = { -1.56, -1.19, -0.93, -0.72, -0.54, -0.38, -0.22, -0.07,
      0.07, 0.22, 0.38, 0.54, 0.72, 0.93, 1.19, 1.56 };
  private static final double[] case18 = { -1.59, -1.22, -0.97, -0.76, -0.59, -0.43, -0.28, -0.14,
      0.00, 0.14, 0.28, 0.43, 0.59, 0.76, 0.97, 1.22, 1.59 };
  private static final double[] case19 = { -1.62, -1.25, -1, -0.8, -0.63, -0.48, -0.34, -0.2,
      -0.07, 0.07, 0.2, 0.34, 0.48, 0.63, 0.8, 1.00, 1.25, 1.62 };
  private static final double[] case20 = { -1.64, -1.28, -1.04, -0.84, -0.67, -0.52, -0.39, -0.25,
      -0.13, 0.00, 0.13, 0.25, 0.39, 0.52, 0.67, 0.84, 1.04, 1.28, 1.64 };

  private static final double[][] distance_case2 = { { 0.000000, 0.000000 },
    { 0.000000, 0.000000 } };

  private static final double[][] distance_case3 = { { 0.000000, 0.000000, 0.860000 },
      { 0.000000, 0.000000, 0.000000 }, { 0.860000, 0.000000, 0.000000 } };

  private static final double[][] distance_case4 =

  { { 0.000000, 0.000000, 0.670000, 1.340000 }, { 0.000000, 0.000000, 0.000000, 0.670000 },
      { 0.670000, 0.000000, 0.000000, 0.000000 }, { 1.340000, 0.670000, 0.000000, 0.000000 } };

  private static final double[][] distance_case5 = {
      { 0.000000, 0.000000, 0.590000, 1.090000, 1.680000 },
      { 0.000000, 0.000000, 0.000000, 0.500000, 1.090000 },
      { 0.590000, 0.000000, 0.000000, 0.000000, 0.590000 },
      { 1.090000, 0.500000, 0.000000, 0.000000, 0.000000 },
      { 1.680000, 1.090000, 0.590000, 0.000000, 0.000000 } };

  private static final double[][] distance_case6 =

  { { 0.000000, 0.000000, 0.540000, 0.970000, 1.400000, 1.940000 },
      { 0.000000, 0.000000, 0.000000, 0.430000, 0.860000, 1.400000 },
      { 0.540000, 0.000000, 0.000000, 0.000000, 0.430000, 0.970000 },
      { 0.970000, 0.430000, 0.000000, 0.000000, 0.000000, 0.540000 },
      { 1.400000, 0.860000, 0.430000, 0.000000, 0.000000, 0.000000 },
      { 1.940000, 1.400000, 0.970000, 0.540000, 0.000000, 0.000000 } };

  private static final double[][] distance_case7 = {
      { 0.000000, 0.000000, 0.500000, 0.890000, 1.250000, 1.640000, 2.140000 },
      { 0.000000, 0.000000, 0.000000, 0.390000, 0.750000, 1.140000, 1.640000 },
      { 0.500000, 0.000000, 0.000000, 0.000000, 0.360000, 0.750000, 1.250000 },
      { 0.890000, 0.390000, 0.000000, 0.000000, 0.000000, 0.390000, 0.890000 },
      { 1.250000, 0.750000, 0.360000, 0.000000, 0.000000, 0.000000, 0.500000 },
      { 1.640000, 1.140000, 0.750000, 0.390000, 0.000000, 0.000000, 0.000000 },
      { 2.140000, 1.640000, 1.250000, 0.890000, 0.500000, 0.000000, 0.000000 } };

  private static final double[][] distance_case8 = {
      { 0.000000, 0.000000, 0.480000, 0.830000, 1.150000, 1.470000, 1.820000, 2.300000 },
      { 0.000000, 0.000000, 0.000000, 0.350000, 0.670000, 0.990000, 1.340000, 1.820000 },
      { 0.480000, 0.000000, 0.000000, 0.000000, 0.320000, 0.640000, 0.990000, 1.470000 },
      { 0.830000, 0.350000, 0.000000, 0.000000, 0.000000, 0.320000, 0.670000, 1.150000 },
      { 1.150000, 0.670000, 0.320000, 0.000000, 0.000000, 0.000000, 0.350000, 0.830000 },
      { 1.470000, 0.990000, 0.640000, 0.320000, 0.000000, 0.000000, 0.000000, 0.480000 },
      { 1.820000, 1.340000, 0.990000, 0.670000, 0.350000, 0.000000, 0.000000, 0.000000 },
      { 2.300000, 1.820000, 1.470000, 1.150000, 0.830000, 0.480000, 0.000000, 0.000000 } };

  private static final double[][] distance_case9 = {
      { 0.000000, 0.000000, 0.460000, 0.790000, 1.080000, 1.360000, 1.650000, 1.980000, 2.440000 },
      { 0.000000, 0.000000, 0.000000, 0.330000, 0.620000, 0.900000, 1.190000, 1.520000, 1.980000 },
      { 0.460000, 0.000000, 0.000000, 0.000000, 0.290000, 0.570000, 0.860000, 1.190000, 1.650000 },
      { 0.790000, 0.330000, 0.000000, 0.000000, 0.000000, 0.280000, 0.570000, 0.900000, 1.360000 },
      { 1.080000, 0.620000, 0.290000, 0.000000, 0.000000, 0.000000, 0.290000, 0.620000, 1.080000 },
      { 1.360000, 0.900000, 0.570000, 0.280000, 0.000000, 0.000000, 0.000000, 0.330000, 0.790000 },
      { 1.650000, 1.190000, 0.860000, 0.570000, 0.290000, 0.000000, 0.000000, 0.000000, 0.460000 },
      { 1.980000, 1.520000, 1.190000, 0.900000, 0.620000, 0.330000, 0.000000, 0.000000, 0.000000 },
      { 2.440000, 1.980000, 1.650000, 1.360000, 1.080000, 0.790000, 0.460000, 0.000000, 0.000000 }};

  private static final double[][] distance_case10 = {
      { 0.000000, 0.000000, 0.440000, 0.760000, 1.030000, 1.280000, 1.530000, 1.800000, 2.120000,
          2.560000 },
      { 0.000000, 0.000000, 0.000000, 0.320000, 0.590000, 0.840000, 1.090000, 1.360000, 1.680000,
          2.120000 },
      { 0.440000, 0.000000, 0.000000, 0.000000, 0.270000, 0.520000, 0.770000, 1.040000, 1.360000,
          1.800000 },
      { 0.760000, 0.320000, 0.000000, 0.000000, 0.000000, 0.250000, 0.500000, 0.770000, 1.090000,
          1.530000 },
      { 1.030000, 0.590000, 0.270000, 0.000000, 0.000000, 0.000000, 0.250000, 0.520000, 0.840000,
          1.280000 },
      { 1.280000, 0.840000, 0.520000, 0.250000, 0.000000, 0.000000, 0.000000, 0.270000, 0.590000,
          1.030000 },
      { 1.530000, 1.090000, 0.770000, 0.500000, 0.250000, 0.000000, 0.000000, 0.000000, 0.320000,
          0.760000 },
      { 1.800000, 1.360000, 1.040000, 0.770000, 0.520000, 0.270000, 0.000000, 0.000000, 0.000000,
          0.440000 },
      { 2.120000, 1.680000, 1.360000, 1.090000, 0.840000, 0.590000, 0.320000, 0.000000, 0.000000,
          0.000000 },
      { 2.560000, 2.120000, 1.800000, 1.530000, 1.280000, 1.030000, 0.760000, 0.440000, 0.000000,
          0.000000 } };

  private static final double[][] distance_case11 = {
      { 0.000000, 0.000000, 0.430000, 0.740000, 0.990000, 1.230000, 1.450000, 1.690000, 1.940000,
          2.250000, 2.680000 },
      { 0.000000, 0.000000, 0.000000, 0.310000, 0.560000, 0.800000, 1.020000, 1.260000, 1.510000,
          1.820000, 2.250000 },
      { 0.430000, 0.000000, 0.000000, 0.000000, 0.250000, 0.490000, 0.710000, 0.950000, 1.200000,
          1.510000, 1.940000 },
      { 0.740000, 0.310000, 0.000000, 0.000000, 0.000000, 0.240000, 0.460000, 0.700000, 0.950000,
          1.260000, 1.690000 },
      { 0.990000, 0.560000, 0.250000, 0.000000, 0.000000, 0.000000, 0.220000, 0.460000, 0.710000,
          1.020000, 1.450000 },
      { 1.230000, 0.800000, 0.490000, 0.240000, 0.000000, 0.000000, 0.000000, 0.240000, 0.490000,
          0.800000, 1.230000 },
      { 1.450000, 1.020000, 0.710000, 0.460000, 0.220000, 0.000000, 0.000000, 0.000000, 0.250000,
          0.560000, 0.990000 },
      { 1.690000, 1.260000, 0.950000, 0.700000, 0.460000, 0.240000, 0.000000, 0.000000, 0.000000,
          0.310000, 0.740000 },
      { 1.940000, 1.510000, 1.200000, 0.950000, 0.710000, 0.490000, 0.250000, 0.000000, 0.000000,
          0.000000, 0.430000 },
      { 2.250000, 1.820000, 1.510000, 1.260000, 1.020000, 0.800000, 0.560000, 0.310000, 0.000000,
          0.000000, 0.000000 },
      { 2.680000, 2.250000, 1.940000, 1.690000, 1.450000, 1.230000, 0.990000, 0.740000, 0.430000,
          0.000000, 0.000000 } };

  private static final double[][] distance_case12 = {
      { 0.000000, 0.000000, 0.410000, 0.710000, 0.950000, 1.170000, 1.380000, 1.590000, 1.810000,
          2.050000, 2.350000, 2.760000 },
      { 0.000000, 0.000000, 0.000000, 0.300000, 0.540000, 0.760000, 0.970000, 1.180000, 1.400000,
          1.640000, 1.940000, 2.350000 },
      { 0.410000, 0.000000, 0.000000, 0.000000, 0.240000, 0.460000, 0.670000, 0.880000, 1.100000,
          1.340000, 1.640000, 2.050000 },
      { 0.710000, 0.300000, 0.000000, 0.000000, 0.000000, 0.220000, 0.430000, 0.640000, 0.860000,
          1.100000, 1.400000, 1.810000 },
      { 0.950000, 0.540000, 0.240000, 0.000000, 0.000000, 0.000000, 0.210000, 0.420000, 0.640000,
          0.880000, 1.180000, 1.590000 },
      { 1.170000, 0.760000, 0.460000, 0.220000, 0.000000, 0.000000, 0.000000, 0.210000, 0.430000,
          0.670000, 0.970000, 1.380000 },
      { 1.380000, 0.970000, 0.670000, 0.430000, 0.210000, 0.000000, 0.000000, 0.000000, 0.220000,
          0.460000, 0.760000, 1.170000 },
      { 1.590000, 1.180000, 0.880000, 0.640000, 0.420000, 0.210000, 0.000000, 0.000000, 0.000000,
          0.240000, 0.540000, 0.950000 },
      { 1.810000, 1.400000, 1.100000, 0.860000, 0.640000, 0.430000, 0.220000, 0.000000, 0.000000,
          0.000000, 0.300000, 0.710000 },
      { 2.050000, 1.640000, 1.340000, 1.100000, 0.880000, 0.670000, 0.460000, 0.240000, 0.000000,
          0.000000, 0.000000, 0.410000 },
      { 2.350000, 1.940000, 1.640000, 1.400000, 1.180000, 0.970000, 0.760000, 0.540000, 0.300000,
          0.000000, 0.000000, 0.000000 },
      { 2.760000, 2.350000, 2.050000, 1.810000, 1.590000, 1.380000, 1.170000, 0.950000, 0.710000,
          0.410000, 0.000000, 0.000000 } };

  private static final double[][] distance_case13 = {
      { 0.000000, 0.000000, 0.410000, 0.690000, 0.930000, 1.140000, 1.330000, 1.530000, 1.720000,
          1.930000, 2.170000, 2.450000, 2.860000 },
      { 0.000000, 0.000000, 0.000000, 0.280000, 0.520000, 0.730000, 0.920000, 1.120000, 1.310000,
          1.520000, 1.760000, 2.040000, 2.450000 },
      { 0.410000, 0.000000, 0.000000, 0.000000, 0.240000, 0.450000, 0.640000, 0.840000, 1.030000,
          1.240000, 1.480000, 1.760000, 2.170000 },
      { 0.690000, 0.280000, 0.000000, 0.000000, 0.000000, 0.210000, 0.400000, 0.600000, 0.790000,
          1.000000, 1.240000, 1.520000, 1.930000 },
      { 0.930000, 0.520000, 0.240000, 0.000000, 0.000000, 0.000000, 0.190000, 0.390000, 0.580000,
          0.790000, 1.030000, 1.310000, 1.720000 },
      { 1.140000, 0.730000, 0.450000, 0.210000, 0.000000, 0.000000, 0.000000, 0.200000, 0.390000,
          0.600000, 0.840000, 1.120000, 1.530000 },
      { 1.330000, 0.920000, 0.640000, 0.400000, 0.190000, 0.000000, 0.000000, 0.000000, 0.190000,
          0.400000, 0.640000, 0.920000, 1.330000 },
      { 1.530000, 1.120000, 0.840000, 0.600000, 0.390000, 0.200000, 0.000000, 0.000000, 0.000000,
          0.210000, 0.450000, 0.730000, 1.140000 },
      { 1.720000, 1.310000, 1.030000, 0.790000, 0.580000, 0.390000, 0.190000, 0.000000, 0.000000,
          0.000000, 0.240000, 0.520000, 0.930000 },
      { 1.930000, 1.520000, 1.240000, 1.000000, 0.790000, 0.600000, 0.400000, 0.210000, 0.000000,
          0.000000, 0.000000, 0.280000, 0.690000 },
      { 2.170000, 1.760000, 1.480000, 1.240000, 1.030000, 0.840000, 0.640000, 0.450000, 0.240000,
          0.000000, 0.000000, 0.000000, 0.410000 },
      { 2.450000, 2.040000, 1.760000, 1.520000, 1.310000, 1.120000, 0.920000, 0.730000, 0.520000,
          0.280000, 0.000000, 0.000000, 0.000000 },
      { 2.860000, 2.450000, 2.170000, 1.930000, 1.720000, 1.530000, 1.330000, 1.140000, 0.930000,
          0.690000, 0.410000, 0.000000, 0.000000 } };

  private static final double[][] distance_case14 = {
      { 0.000000, 0.000000, 0.400000, 0.680000, 0.900000, 1.100000, 1.290000, 1.470000, 1.650000,
          1.840000, 2.040000, 2.260000, 2.540000, 2.940000 },
      { 0.000000, 0.000000, 0.000000, 0.280000, 0.500000, 0.700000, 0.890000, 1.070000, 1.250000,
          1.440000, 1.640000, 1.860000, 2.140000, 2.540000 },
      { 0.400000, 0.000000, 0.000000, 0.000000, 0.220000, 0.420000, 0.610000, 0.790000, 0.970000,
          1.160000, 1.360000, 1.580000, 1.860000, 2.260000 },
      { 0.680000, 0.280000, 0.000000, 0.000000, 0.000000, 0.200000, 0.390000, 0.570000, 0.750000,
          0.940000, 1.140000, 1.360000, 1.640000, 2.040000 },
      { 0.900000, 0.500000, 0.220000, 0.000000, 0.000000, 0.000000, 0.190000, 0.370000, 0.550000,
          0.740000, 0.940000, 1.160000, 1.440000, 1.840000 },
      { 1.100000, 0.700000, 0.420000, 0.200000, 0.000000, 0.000000, 0.000000, 0.180000, 0.360000,
          0.550000, 0.750000, 0.970000, 1.250000, 1.650000 },
      { 1.290000, 0.890000, 0.610000, 0.390000, 0.190000, 0.000000, 0.000000, 0.000000, 0.180000,
          0.370000, 0.570000, 0.790000, 1.070000, 1.470000 },
      { 1.470000, 1.070000, 0.790000, 0.570000, 0.370000, 0.180000, 0.000000, 0.000000, 0.000000,
          0.190000, 0.390000, 0.610000, 0.890000, 1.290000 },
      { 1.650000, 1.250000, 0.970000, 0.750000, 0.550000, 0.360000, 0.180000, 0.000000, 0.000000,
          0.000000, 0.200000, 0.420000, 0.700000, 1.100000 },
      { 1.840000, 1.440000, 1.160000, 0.940000, 0.740000, 0.550000, 0.370000, 0.190000, 0.000000,
          0.000000, 0.000000, 0.220000, 0.500000, 0.900000 },
      { 2.040000, 1.640000, 1.360000, 1.140000, 0.940000, 0.750000, 0.570000, 0.390000, 0.200000,
          0.000000, 0.000000, 0.000000, 0.280000, 0.680000 },
      { 2.260000, 1.860000, 1.580000, 1.360000, 1.160000, 0.970000, 0.790000, 0.610000, 0.420000,
          0.220000, 0.000000, 0.000000, 0.000000, 0.400000 },
      { 2.540000, 2.140000, 1.860000, 1.640000, 1.440000, 1.250000, 1.070000, 0.890000, 0.700000,
          0.500000, 0.280000, 0.000000, 0.000000, 0.000000 },
      { 2.940000, 2.540000, 2.260000, 2.040000, 1.840000, 1.650000, 1.470000, 1.290000, 1.100000,
          0.900000, 0.680000, 0.400000, 0.000000, 0.000000 } };

  private static final double[][] distance_case15 = {
      { 0.000000, 0.000000, 0.390000, 0.660000, 0.880000, 1.070000, 1.250000, 1.420000, 1.580000,
          1.750000, 1.930000, 2.120000, 2.340000, 2.610000, 3.000000 },
      { 0.000000, 0.000000, 0.000000, 0.270000, 0.490000, 0.680000, 0.860000, 1.030000, 1.190000,
          1.360000, 1.540000, 1.730000, 1.950000, 2.220000, 2.610000 },
      { 0.390000, 0.000000, 0.000000, 0.000000, 0.220000, 0.410000, 0.590000, 0.760000, 0.920000,
          1.090000, 1.270000, 1.460000, 1.680000, 1.950000, 2.340000 },
      { 0.660000, 0.270000, 0.000000, 0.000000, 0.000000, 0.190000, 0.370000, 0.540000, 0.700000,
          0.870000, 1.050000, 1.240000, 1.460000, 1.730000, 2.120000 },
      { 0.880000, 0.490000, 0.220000, 0.000000, 0.000000, 0.000000, 0.180000, 0.350000, 0.510000,
          0.680000, 0.860000, 1.050000, 1.270000, 1.540000, 1.930000 },
      { 1.070000, 0.680000, 0.410000, 0.190000, 0.000000, 0.000000, 0.000000, 0.170000, 0.330000,
          0.500000, 0.680000, 0.870000, 1.090000, 1.360000, 1.750000 },
      { 1.250000, 0.860000, 0.590000, 0.370000, 0.180000, 0.000000, 0.000000, 0.000000, 0.160000,
          0.330000, 0.510000, 0.700000, 0.920000, 1.190000, 1.580000 },
      { 1.420000, 1.030000, 0.760000, 0.540000, 0.350000, 0.170000, 0.000000, 0.000000, 0.000000,
          0.170000, 0.350000, 0.540000, 0.760000, 1.030000, 1.420000 },
      { 1.580000, 1.190000, 0.920000, 0.700000, 0.510000, 0.330000, 0.160000, 0.000000, 0.000000,
          0.000000, 0.180000, 0.370000, 0.590000, 0.860000, 1.250000 },
      { 1.750000, 1.360000, 1.090000, 0.870000, 0.680000, 0.500000, 0.330000, 0.170000, 0.000000,
          0.000000, 0.000000, 0.190000, 0.410000, 0.680000, 1.070000 },
      { 1.930000, 1.540000, 1.270000, 1.050000, 0.860000, 0.680000, 0.510000, 0.350000, 0.180000,
          0.000000, 0.000000, 0.000000, 0.220000, 0.490000, 0.880000 },
      { 2.120000, 1.730000, 1.460000, 1.240000, 1.050000, 0.870000, 0.700000, 0.540000, 0.370000,
          0.190000, 0.000000, 0.000000, 0.000000, 0.270000, 0.660000 },
      { 2.340000, 1.950000, 1.680000, 1.460000, 1.270000, 1.090000, 0.920000, 0.760000, 0.590000,
          0.410000, 0.220000, 0.000000, 0.000000, 0.000000, 0.390000 },
      { 2.610000, 2.220000, 1.950000, 1.730000, 1.540000, 1.360000, 1.190000, 1.030000, 0.860000,
          0.680000, 0.490000, 0.270000, 0.000000, 0.000000, 0.000000 },
      { 3.000000, 2.610000, 2.340000, 2.120000, 1.930000, 1.750000, 1.580000, 1.420000, 1.250000,
          1.070000, 0.880000, 0.660000, 0.390000, 0.000000, 0.000000 } };

  private static final double[][] distance_case16 = {
      { 0.000000, 0.000000, 0.380000, 0.640000, 0.860000, 1.040000, 1.210000, 1.370000, 1.530000,
          1.690000, 1.850000, 2.020000, 2.200000, 2.420000, 2.680000, 3.060000 },
      { 0.000000, 0.000000, 0.000000, 0.260000, 0.480000, 0.660000, 0.830000, 0.990000, 1.150000,
          1.310000, 1.470000, 1.640000, 1.820000, 2.040000, 2.300000, 2.680000 },
      { 0.380000, 0.000000, 0.000000, 0.000000, 0.220000, 0.400000, 0.570000, 0.730000, 0.890000,
          1.050000, 1.210000, 1.380000, 1.560000, 1.780000, 2.040000, 2.420000 },
      { 0.640000, 0.260000, 0.000000, 0.000000, 0.000000, 0.180000, 0.350000, 0.510000, 0.670000,
          0.830000, 0.990000, 1.160000, 1.340000, 1.560000, 1.820000, 2.200000 },
      { 0.860000, 0.480000, 0.220000, 0.000000, 0.000000, 0.000000, 0.170000, 0.330000, 0.490000,
          0.650000, 0.810000, 0.980000, 1.160000, 1.380000, 1.640000, 2.020000 },
      { 1.040000, 0.660000, 0.400000, 0.180000, 0.000000, 0.000000, 0.000000, 0.160000, 0.320000,
          0.480000, 0.640000, 0.810000, 0.990000, 1.210000, 1.470000, 1.850000 },
      { 1.210000, 0.830000, 0.570000, 0.350000, 0.170000, 0.000000, 0.000000, 0.000000, 0.160000,
          0.320000, 0.480000, 0.650000, 0.830000, 1.050000, 1.310000, 1.690000 },
      { 1.370000, 0.990000, 0.730000, 0.510000, 0.330000, 0.160000, 0.000000, 0.000000, 0.000000,
          0.160000, 0.320000, 0.490000, 0.670000, 0.890000, 1.150000, 1.530000 },
      { 1.530000, 1.150000, 0.890000, 0.670000, 0.490000, 0.320000, 0.160000, 0.000000, 0.000000,
          0.000000, 0.160000, 0.330000, 0.510000, 0.730000, 0.990000, 1.370000 },
      { 1.690000, 1.310000, 1.050000, 0.830000, 0.650000, 0.480000, 0.320000, 0.160000, 0.000000,
          0.000000, 0.000000, 0.170000, 0.350000, 0.570000, 0.830000, 1.210000 },
      { 1.850000, 1.470000, 1.210000, 0.990000, 0.810000, 0.640000, 0.480000, 0.320000, 0.160000,
          0.000000, 0.000000, 0.000000, 0.180000, 0.400000, 0.660000, 1.040000 },
      { 2.020000, 1.640000, 1.380000, 1.160000, 0.980000, 0.810000, 0.650000, 0.490000, 0.330000,
          0.170000, 0.000000, 0.000000, 0.000000, 0.220000, 0.480000, 0.860000 },
      { 2.200000, 1.820000, 1.560000, 1.340000, 1.160000, 0.990000, 0.830000, 0.670000, 0.510000,
          0.350000, 0.180000, 0.000000, 0.000000, 0.000000, 0.260000, 0.640000 },
      { 2.420000, 2.040000, 1.780000, 1.560000, 1.380000, 1.210000, 1.050000, 0.890000, 0.730000,
          0.570000, 0.400000, 0.220000, 0.000000, 0.000000, 0.000000, 0.380000 },
      { 2.680000, 2.300000, 2.040000, 1.820000, 1.640000, 1.470000, 1.310000, 1.150000, 0.990000,
          0.830000, 0.660000, 0.480000, 0.260000, 0.000000, 0.000000, 0.000000 },
      { 3.060000, 2.680000, 2.420000, 2.200000, 2.020000, 1.850000, 1.690000, 1.530000, 1.370000,
          1.210000, 1.040000, 0.860000, 0.640000, 0.380000, 0.000000, 0.000000 } };

  private static final double[][] distance_case17 = {
      { 0.000000, 0.000000, 0.370000, 0.630000, 0.840000, 1.020000, 1.180000, 1.340000, 1.490000,
          1.630000, 1.780000, 1.940000, 2.100000, 2.280000, 2.490000, 2.750000, 3.120000 },
      { 0.000000, 0.000000, 0.000000, 0.260000, 0.470000, 0.650000, 0.810000, 0.970000, 1.120000,
          1.260000, 1.410000, 1.570000, 1.730000, 1.910000, 2.120000, 2.380000, 2.750000 },
      { 0.370000, 0.000000, 0.000000, 0.000000, 0.210000, 0.390000, 0.550000, 0.710000, 0.860000,
          1.000000, 1.150000, 1.310000, 1.470000, 1.650000, 1.860000, 2.120000, 2.490000 },
      { 0.630000, 0.260000, 0.000000, 0.000000, 0.000000, 0.180000, 0.340000, 0.500000, 0.650000,
          0.790000, 0.940000, 1.100000, 1.260000, 1.440000, 1.650000, 1.910000, 2.280000 },
      { 0.840000, 0.470000, 0.210000, 0.000000, 0.000000, 0.000000, 0.160000, 0.320000, 0.470000,
          0.610000, 0.760000, 0.920000, 1.080000, 1.260000, 1.470000, 1.730000, 2.100000 },
      { 1.020000, 0.650000, 0.390000, 0.180000, 0.000000, 0.000000, 0.000000, 0.160000, 0.310000,
          0.450000, 0.600000, 0.760000, 0.920000, 1.100000, 1.310000, 1.570000, 1.940000 },
      { 1.180000, 0.810000, 0.550000, 0.340000, 0.160000, 0.000000, 0.000000, 0.000000, 0.150000,
          0.290000, 0.440000, 0.600000, 0.760000, 0.940000, 1.150000, 1.410000, 1.780000 },
      { 1.340000, 0.970000, 0.710000, 0.500000, 0.320000, 0.160000, 0.000000, 0.000000, 0.000000,
          0.140000, 0.290000, 0.450000, 0.610000, 0.790000, 1.000000, 1.260000, 1.630000 },
      { 1.490000, 1.120000, 0.860000, 0.650000, 0.470000, 0.310000, 0.150000, 0.000000, 0.000000,
          0.000000, 0.150000, 0.310000, 0.470000, 0.650000, 0.860000, 1.120000, 1.490000 },
      { 1.630000, 1.260000, 1.000000, 0.790000, 0.610000, 0.450000, 0.290000, 0.140000, 0.000000,
          0.000000, 0.000000, 0.160000, 0.320000, 0.500000, 0.710000, 0.970000, 1.340000 },
      { 1.780000, 1.410000, 1.150000, 0.940000, 0.760000, 0.600000, 0.440000, 0.290000, 0.150000,
          0.000000, 0.000000, 0.000000, 0.160000, 0.340000, 0.550000, 0.810000, 1.180000 },
      { 1.940000, 1.570000, 1.310000, 1.100000, 0.920000, 0.760000, 0.600000, 0.450000, 0.310000,
          0.160000, 0.000000, 0.000000, 0.000000, 0.180000, 0.390000, 0.650000, 1.020000 },
      { 2.100000, 1.730000, 1.470000, 1.260000, 1.080000, 0.920000, 0.760000, 0.610000, 0.470000,
          0.320000, 0.160000, 0.000000, 0.000000, 0.000000, 0.210000, 0.470000, 0.840000 },
      { 2.280000, 1.910000, 1.650000, 1.440000, 1.260000, 1.100000, 0.940000, 0.790000, 0.650000,
          0.500000, 0.340000, 0.180000, 0.000000, 0.000000, 0.000000, 0.260000, 0.630000 },
      { 2.490000, 2.120000, 1.860000, 1.650000, 1.470000, 1.310000, 1.150000, 1.000000, 0.860000,
          0.710000, 0.550000, 0.390000, 0.210000, 0.000000, 0.000000, 0.000000, 0.370000 },
      { 2.750000, 2.380000, 2.120000, 1.910000, 1.730000, 1.570000, 1.410000, 1.260000, 1.120000,
          0.970000, 0.810000, 0.650000, 0.470000, 0.260000, 0.000000, 0.000000, 0.000000 },
      { 3.120000, 2.750000, 2.490000, 2.280000, 2.100000, 1.940000, 1.780000, 1.630000, 1.490000,
          1.340000, 1.180000, 1.020000, 0.840000, 0.630000, 0.370000, 0.000000, 0.000000 } };

  private static final double[][] distance_case18 = {
      { 0.000000, 0.000000, 0.370000, 0.620000, 0.830000, 1.000000, 1.160000, 1.310000, 1.450000,
          1.590000, 1.730000, 1.870000, 2.020000, 2.180000, 2.350000, 2.560000, 2.810000, 3.180000},
      { 0.000000, 0.000000, 0.000000, 0.250000, 0.460000, 0.630000, 0.790000, 0.940000, 1.080000,
          1.220000, 1.360000, 1.500000, 1.650000, 1.810000, 1.980000, 2.190000, 2.440000, 2.810000},
      { 0.370000, 0.000000, 0.000000, 0.000000, 0.210000, 0.380000, 0.540000, 0.690000, 0.830000,
          0.970000, 1.110000, 1.250000, 1.400000, 1.560000, 1.730000, 1.940000, 2.190000, 2.560000},
      { 0.620000, 0.250000, 0.000000, 0.000000, 0.000000, 0.170000, 0.330000, 0.480000, 0.620000,
          0.760000, 0.900000, 1.040000, 1.190000, 1.350000, 1.520000, 1.730000, 1.980000, 2.350000},
      { 0.830000, 0.460000, 0.210000, 0.000000, 0.000000, 0.000000, 0.160000, 0.310000, 0.450000,
          0.590000, 0.730000, 0.870000, 1.020000, 1.180000, 1.350000, 1.560000, 1.810000, 2.180000},
      { 1.000000, 0.630000, 0.380000, 0.170000, 0.000000, 0.000000, 0.000000, 0.150000, 0.290000,
          0.430000, 0.570000, 0.710000, 0.860000, 1.020000, 1.190000, 1.400000, 1.650000, 2.020000},
      { 1.160000, 0.790000, 0.540000, 0.330000, 0.160000, 0.000000, 0.000000, 0.000000, 0.140000,
          0.280000, 0.420000, 0.560000, 0.710000, 0.870000, 1.040000, 1.250000, 1.500000, 1.870000},
      { 1.310000, 0.940000, 0.690000, 0.480000, 0.310000, 0.150000, 0.000000, 0.000000, 0.000000,
          0.140000, 0.280000, 0.420000, 0.570000, 0.730000, 0.900000, 1.110000, 1.360000, 1.730000},
      { 1.450000, 1.080000, 0.830000, 0.620000, 0.450000, 0.290000, 0.140000, 0.000000, 0.000000,
          0.000000, 0.140000, 0.280000, 0.430000, 0.590000, 0.760000, 0.970000, 1.220000, 1.590000},
      { 1.590000, 1.220000, 0.970000, 0.760000, 0.590000, 0.430000, 0.280000, 0.140000, 0.000000,
          0.000000, 0.000000, 0.140000, 0.290000, 0.450000, 0.620000, 0.830000, 1.080000, 1.450000},
      { 1.730000, 1.360000, 1.110000, 0.900000, 0.730000, 0.570000, 0.420000, 0.280000, 0.140000,
          0.000000, 0.000000, 0.000000, 0.150000, 0.310000, 0.480000, 0.690000, 0.940000, 1.310000},
      { 1.870000, 1.500000, 1.250000, 1.040000, 0.870000, 0.710000, 0.560000, 0.420000, 0.280000,
          0.140000, 0.000000, 0.000000, 0.000000, 0.160000, 0.330000, 0.540000, 0.790000, 1.160000},
      { 2.020000, 1.650000, 1.400000, 1.190000, 1.020000, 0.860000, 0.710000, 0.570000, 0.430000,
          0.290000, 0.150000, 0.000000, 0.000000, 0.000000, 0.170000, 0.380000, 0.630000, 1.000000},
      { 2.180000, 1.810000, 1.560000, 1.350000, 1.180000, 1.020000, 0.870000, 0.730000, 0.590000,
          0.450000, 0.310000, 0.160000, 0.000000, 0.000000, 0.000000, 0.210000, 0.460000, 0.830000},
      { 2.350000, 1.980000, 1.730000, 1.520000, 1.350000, 1.190000, 1.040000, 0.900000, 0.760000,
          0.620000, 0.480000, 0.330000, 0.170000, 0.000000, 0.000000, 0.000000, 0.250000, 0.620000},
      { 2.560000, 2.190000, 1.940000, 1.730000, 1.560000, 1.400000, 1.250000, 1.110000, 0.970000,
          0.830000, 0.690000, 0.540000, 0.380000, 0.210000, 0.000000, 0.000000, 0.000000, 0.370000},
      { 2.810000, 2.440000, 2.190000, 1.980000, 1.810000, 1.650000, 1.500000, 1.360000, 1.220000,
          1.080000, 0.940000, 0.790000, 0.630000, 0.460000, 0.250000, 0.000000, 0.000000, 0.000000},
      { 3.180000, 2.810000, 2.560000, 2.350000, 2.180000, 2.020000, 1.870000, 1.730000, 1.590000,
          1.450000, 1.310000, 1.160000, 1.000000, 0.830000, 0.620000, 0.370000, 0.000000,0.000000}};

  private static final double[][] distance_case19 = {
      { 0.000000, 0.000000, 0.370000, 0.620000, 0.820000, 0.990000, 1.140000, 1.280000, 1.420000,
          1.550000, 1.690000, 1.820000, 1.960000, 2.100000, 2.250000, 2.420000, 2.620000, 2.870000,
          3.240000 },
      { 0.000000, 0.000000, 0.000000, 0.250000, 0.450000, 0.620000, 0.770000, 0.910000, 1.050000,
          1.180000, 1.320000, 1.450000, 1.590000, 1.730000, 1.880000, 2.050000, 2.250000, 2.500000,
          2.870000 },
      { 0.370000, 0.000000, 0.000000, 0.000000, 0.200000, 0.370000, 0.520000, 0.660000, 0.800000,
          0.930000, 1.070000, 1.200000, 1.340000, 1.480000, 1.630000, 1.800000, 2.000000, 2.250000,
          2.620000 },
      { 0.620000, 0.250000, 0.000000, 0.000000, 0.000000, 0.170000, 0.320000, 0.460000, 0.600000,
          0.730000, 0.870000, 1.000000, 1.140000, 1.280000, 1.430000, 1.600000, 1.800000, 2.050000,
          2.420000 },
      { 0.820000, 0.450000, 0.200000, 0.000000, 0.000000, 0.000000, 0.150000, 0.290000, 0.430000,
          0.560000, 0.700000, 0.830000, 0.970000, 1.110000, 1.260000, 1.430000, 1.630000, 1.880000,
          2.250000 },
      { 0.990000, 0.620000, 0.370000, 0.170000, 0.000000, 0.000000, 0.000000, 0.140000, 0.280000,
          0.410000, 0.550000, 0.680000, 0.820000, 0.960000, 1.110000, 1.280000, 1.480000, 1.730000,
          2.100000 },
      { 1.140000, 0.770000, 0.520000, 0.320000, 0.150000, 0.000000, 0.000000, 0.000000, 0.140000,
          0.270000, 0.410000, 0.540000, 0.680000, 0.820000, 0.970000, 1.140000, 1.340000, 1.590000,
          1.960000 },
      { 1.280000, 0.910000, 0.660000, 0.460000, 0.290000, 0.140000, 0.000000, 0.000000, 0.000000,
          0.130000, 0.270000, 0.400000, 0.540000, 0.680000, 0.830000, 1.000000, 1.200000, 1.450000,
          1.820000 },
      { 1.420000, 1.050000, 0.800000, 0.600000, 0.430000, 0.280000, 0.140000, 0.000000, 0.000000,
          0.000000, 0.140000, 0.270000, 0.410000, 0.550000, 0.700000, 0.870000, 1.070000, 1.320000,
          1.690000 },
      { 1.550000, 1.180000, 0.930000, 0.730000, 0.560000, 0.410000, 0.270000, 0.130000, 0.000000,
          0.000000, 0.000000, 0.130000, 0.270000, 0.410000, 0.560000, 0.730000, 0.930000, 1.180000,
          1.550000 },
      { 1.690000, 1.320000, 1.070000, 0.870000, 0.700000, 0.550000, 0.410000, 0.270000, 0.140000,
          0.000000, 0.000000, 0.000000, 0.140000, 0.280000, 0.430000, 0.600000, 0.800000, 1.050000,
          1.420000 },
      { 1.820000, 1.450000, 1.200000, 1.000000, 0.830000, 0.680000, 0.540000, 0.400000, 0.270000,
          0.130000, 0.000000, 0.000000, 0.000000, 0.140000, 0.290000, 0.460000, 0.660000, 0.910000,
          1.280000 },
      { 1.960000, 1.590000, 1.340000, 1.140000, 0.970000, 0.820000, 0.680000, 0.540000, 0.410000,
          0.270000, 0.140000, 0.000000, 0.000000, 0.000000, 0.150000, 0.320000, 0.520000, 0.770000,
          1.140000 },
      { 2.100000, 1.730000, 1.480000, 1.280000, 1.110000, 0.960000, 0.820000, 0.680000, 0.550000,
          0.410000, 0.280000, 0.140000, 0.000000, 0.000000, 0.000000, 0.170000, 0.370000, 0.620000,
          0.990000 },
      { 2.250000, 1.880000, 1.630000, 1.430000, 1.260000, 1.110000, 0.970000, 0.830000, 0.700000,
          0.560000, 0.430000, 0.290000, 0.150000, 0.000000, 0.000000, 0.000000, 0.200000, 0.450000,
          0.820000 },
      { 2.420000, 2.050000, 1.800000, 1.600000, 1.430000, 1.280000, 1.140000, 1.000000, 0.870000,
          0.730000, 0.600000, 0.460000, 0.320000, 0.170000, 0.000000, 0.000000, 0.000000, 0.250000,
          0.620000 },
      { 2.620000, 2.250000, 2.000000, 1.800000, 1.630000, 1.480000, 1.340000, 1.200000, 1.070000,
          0.930000, 0.800000, 0.660000, 0.520000, 0.370000, 0.200000, 0.000000, 0.000000, 0.000000,
          0.370000 },
      { 2.870000, 2.500000, 2.250000, 2.050000, 1.880000, 1.730000, 1.590000, 1.450000, 1.320000,
          1.180000, 1.050000, 0.910000, 0.770000, 0.620000, 0.450000, 0.250000, 0.000000, 0.000000,
          0.000000 },
      { 3.240000, 2.870000, 2.620000, 2.420000, 2.250000, 2.100000, 1.960000, 1.820000, 1.690000,
          1.550000, 1.420000, 1.280000, 1.140000, 0.990000, 0.820000, 0.620000, 0.370000, 0.000000,
          0.000000 } };

  private static final double[][] distance_case20 = {
      { 0.000000, 0.000000, 0.360000, 0.600000, 0.800000, 0.970000, 1.120000, 1.250000, 1.390000,
          1.510000, 1.640000, 1.770000, 1.890000, 2.030000, 2.160000, 2.310000, 2.480000, 2.680000,
          2.920000, 3.280000 },
      { 0.000000, 0.000000, 0.000000, 0.240000, 0.440000, 0.610000, 0.760000, 0.890000, 1.030000,
          1.150000, 1.280000, 1.410000, 1.530000, 1.670000, 1.800000, 1.950000, 2.120000, 2.320000,
          2.560000, 2.920000 },
      { 0.360000, 0.000000, 0.000000, 0.000000, 0.200000, 0.370000, 0.520000, 0.650000, 0.790000,
          0.910000, 1.040000, 1.170000, 1.290000, 1.430000, 1.560000, 1.710000, 1.880000, 2.080000,
          2.320000, 2.680000 },
      { 0.600000, 0.240000, 0.000000, 0.000000, 0.000000, 0.170000, 0.320000, 0.450000, 0.590000,
          0.710000, 0.840000, 0.970000, 1.090000, 1.230000, 1.360000, 1.510000, 1.680000, 1.880000,
          2.120000, 2.480000 },
      { 0.800000, 0.440000, 0.200000, 0.000000, 0.000000, 0.000000, 0.150000, 0.280000, 0.420000,
          0.540000, 0.670000, 0.800000, 0.920000, 1.060000, 1.190000, 1.340000, 1.510000, 1.710000,
          1.950000, 2.310000 },
      { 0.970000, 0.610000, 0.370000, 0.170000, 0.000000, 0.000000, 0.000000, 0.130000, 0.270000,
          0.390000, 0.520000, 0.650000, 0.770000, 0.910000, 1.040000, 1.190000, 1.360000, 1.560000,
          1.800000, 2.160000 },
      { 1.120000, 0.760000, 0.520000, 0.320000, 0.150000, 0.000000, 0.000000, 0.000000, 0.140000,
          0.260000, 0.390000, 0.520000, 0.640000, 0.780000, 0.910000, 1.060000, 1.230000, 1.430000,
          1.670000, 2.030000 },
      { 1.250000, 0.890000, 0.650000, 0.450000, 0.280000, 0.130000, 0.000000, 0.000000, 0.000000,
          0.120000, 0.250000, 0.380000, 0.500000, 0.640000, 0.770000, 0.920000, 1.090000, 1.290000,
          1.530000, 1.890000 },
      { 1.390000, 1.030000, 0.790000, 0.590000, 0.420000, 0.270000, 0.140000, 0.000000, 0.000000,
          0.000000, 0.130000, 0.260000, 0.380000, 0.520000, 0.650000, 0.800000, 0.970000, 1.170000,
          1.410000, 1.770000 },
      { 1.510000, 1.150000, 0.910000, 0.710000, 0.540000, 0.390000, 0.260000, 0.120000, 0.000000,
          0.000000, 0.000000, 0.130000, 0.250000, 0.390000, 0.520000, 0.670000, 0.840000, 1.040000,
          1.280000, 1.640000 },
      { 1.640000, 1.280000, 1.040000, 0.840000, 0.670000, 0.520000, 0.390000, 0.250000, 0.130000,
          0.000000, 0.000000, 0.000000, 0.120000, 0.260000, 0.390000, 0.540000, 0.710000, 0.910000,
          1.150000, 1.510000 },
      { 1.770000, 1.410000, 1.170000, 0.970000, 0.800000, 0.650000, 0.520000, 0.380000, 0.260000,
          0.130000, 0.000000, 0.000000, 0.000000, 0.140000, 0.270000, 0.420000, 0.590000, 0.790000,
          1.030000, 1.390000 },
      { 1.890000, 1.530000, 1.290000, 1.090000, 0.920000, 0.770000, 0.640000, 0.500000, 0.380000,
          0.250000, 0.120000, 0.000000, 0.000000, 0.000000, 0.130000, 0.280000, 0.450000, 0.650000,
          0.890000, 1.250000 },
      { 2.030000, 1.670000, 1.430000, 1.230000, 1.060000, 0.910000, 0.780000, 0.640000, 0.520000,
          0.390000, 0.260000, 0.140000, 0.000000, 0.000000, 0.000000, 0.150000, 0.320000, 0.520000,
          0.760000, 1.120000 },
      { 2.160000, 1.800000, 1.560000, 1.360000, 1.190000, 1.040000, 0.910000, 0.770000, 0.650000,
          0.520000, 0.390000, 0.270000, 0.130000, 0.000000, 0.000000, 0.000000, 0.170000, 0.370000,
          0.610000, 0.970000 },
      { 2.310000, 1.950000, 1.710000, 1.510000, 1.340000, 1.190000, 1.060000, 0.920000, 0.800000,
          0.670000, 0.540000, 0.420000, 0.280000, 0.150000, 0.000000, 0.000000, 0.000000, 0.200000,
          0.440000, 0.800000 },
      { 2.480000, 2.120000, 1.880000, 1.680000, 1.510000, 1.360000, 1.230000, 1.090000, 0.970000,
          0.840000, 0.710000, 0.590000, 0.450000, 0.320000, 0.170000, 0.000000, 0.000000, 0.000000,
          0.240000, 0.600000 },
      { 2.680000, 2.320000, 2.080000, 1.880000, 1.710000, 1.560000, 1.430000, 1.290000, 1.170000,
          1.040000, 0.910000, 0.790000, 0.650000, 0.520000, 0.370000, 0.200000, 0.000000, 0.000000,
          0.000000, 0.360000 },
      { 2.920000, 2.560000, 2.320000, 2.120000, 1.950000, 1.800000, 1.670000, 1.530000, 1.410000,
          1.280000, 1.150000, 1.030000, 0.890000, 0.760000, 0.610000, 0.440000, 0.240000, 0.000000,
          0.000000, 0.000000 },
      { 3.280000, 2.920000, 2.680000, 2.480000, 2.310000, 2.160000, 2.030000, 1.890000, 1.770000,
          1.640000, 1.510000, 1.390000, 1.250000, 1.120000, 0.970000, 0.800000, 0.600000, 0.360000,
          0.000000, 0.000000 } };

  /**
   * Constructor.
   */
  public NormalAlphabet() {
    super();
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public double[] getCuts(Integer size) throws TSException {
    switch (size) {
    case 2:
      return case2.clone();
    case 3:
      return case3.clone();
    case 4:
      return case4.clone();
    case 5:
      return case5.clone();
    case 6:
      return case6.clone();
    case 7:
      return case7.clone();
    case 8:
      return case8.clone();
    case 9:
      return case9.clone();
    case 10:
      return case10.clone();
    case 11:
      return case11.clone();
    case 12:
      return case12.clone();
    case 13:
      return case13.clone();
    case 14:
      return case14.clone();
    case 15:
      return case15.clone();
    case 16:
      return case16.clone();
    case 17:
      return case17.clone();
    case 18:
      return case18.clone();
    case 19:
      return case19.clone();
    case 20:
      return case20.clone();
    default:
      throw new TSException("Invalid alphabet size.");
    }
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Integer getMaxSize() {
    return MAX_SIZE;
  }

  @Override
  public double[][] getDistanceMatrix(Integer size) throws TSException {
    switch (size) {
    case 2:
      return distance_case2.clone();
    case 3:
      return distance_case3.clone();
    case 4:
      return distance_case4.clone();
    case 5:
      return distance_case5.clone();
    case 6:
      return distance_case6.clone();
    case 7:
      return distance_case7.clone();
    case 8:
      return distance_case8.clone();
    case 9:
      return distance_case9.clone();
    case 10:
      return distance_case10.clone();
    case 11:
      return distance_case11.clone();
    case 12:
      return distance_case12.clone();
    case 13:
      return distance_case13.clone();
    case 14:
      return distance_case14.clone();
    case 15:
      return distance_case15.clone();
    case 16:
      return distance_case16.clone();
    case 17:
      return distance_case17.clone();
    case 18:
      return distance_case18.clone();
    case 19:
      return distance_case19.clone();
    case 20:
      return distance_case20.clone();
    default:
      throw new TSException("Invalid alphabet size.");
    }
  }

}
