/*
 * Copyright (C) 2011-2018 clueminer.org
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.clueminer.export.impl;

import java.util.prefs.Preferences;

/**
 *
 * @author deric
 */
public class CsvOptions extends javax.swing.JPanel {

    private static final long serialVersionUID = 7517925954266797315L;

    /**
     * Creates new form CsvOptions
     */
    public CsvOptions() {
        initComponents();
    }

    public Preferences updatePreferences(Preferences p) {
        boolean rawData = false;
        boolean preprocessData = false;
        if (chckRaw.isSelected()) {
            rawData = true;
        }
        p.putBoolean("raw_data", rawData);

        if (chckPreprocess.isSelected()) {
            preprocessData = true;
        }
        p.putBoolean("preprocess_data", preprocessData);
        p.putBoolean("quote_strings", chckQuote.isSelected());

        p.put("separator", (String) comboSeparator.getSelectedItem());

        return p;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chckRaw = new javax.swing.JCheckBox();
        chckPreprocess = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        comboSeparator = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        chckQuote = new javax.swing.JCheckBox();

        chckRaw.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(chckRaw, org.openide.util.NbBundle.getMessage(CsvOptions.class, "CsvOptions.chckRaw.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chckPreprocess, org.openide.util.NbBundle.getMessage(CsvOptions.class, "CsvOptions.chckPreprocess.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(CsvOptions.class, "CsvOptions.jLabel1.text")); // NOI18N

        comboSeparator.setModel(new javax.swing.DefaultComboBoxModel(new String[] { ",", ";", "(tab)" }));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(CsvOptions.class, "CsvOptions.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chckQuote, org.openide.util.NbBundle.getMessage(CsvOptions.class, "CsvOptions.chckQuote.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 100, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(83, 83, 83))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(3, 3, 3)
                        .addComponent(comboSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chckQuote)
                    .addComponent(chckPreprocess)
                    .addComponent(chckRaw))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chckRaw)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chckPreprocess)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chckQuote)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chckPreprocess;
    private javax.swing.JCheckBox chckQuote;
    private javax.swing.JCheckBox chckRaw;
    private javax.swing.JComboBox comboSeparator;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
